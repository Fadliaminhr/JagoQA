{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 2,
    "pending": 0,
    "failures": 4,
    "start": "2023-09-04T10:11:07.761Z",
    "end": "2023-09-04T10:11:11.664Z",
    "duration": 3903,
    "testsRegistered": 6,
    "passPercent": 33.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fbb81449-6912-4f4d-b337-72267d56b3a8",
      "title": "",
      "fullFile": "C:\\Users\\fadli\\Documents\\JagoQA\\test-2\\api-test-2\\login.js",
      "file": "\\test-2\\api-test-2\\login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "12b57aa8-84c7-42d4-9c07-6439d8d77dfd",
          "title": "Scenario Login Feature",
          "fullFile": "C:\\Users\\fadli\\Documents\\JagoQA\\test-2\\api-test-2\\login.js",
          "file": "\\test-2\\api-test-2\\login.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1.Verify Success Login with valid email and password",
              "fullTitle": "Scenario Login Feature 1.Verify Success Login with valid email and password",
              "timedOut": false,
              "duration": 721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await domain\n  .post(\"/login\")\n  .send({ email: \"jokotampan900@gmail.com\", password: \"jokotampan900\" });\nexpect(response.body.status).to.eql('SUCCESS_LOGIN');\nexpect(response.body.message).to.eql('Anda Berhasil Login');\nexpect(response.body).to.include.keys(\"data\", \"message\", \"status\", \"credentials\");",
              "err": {},
              "uuid": "bf4bf01b-a752-471c-9ff4-a450eaa185e5",
              "parentUUID": "12b57aa8-84c7-42d4-9c07-6439d8d77dfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "2.Verify Failed Login with empty email & password",
              "fullTitle": "Scenario Login Feature 2.Verify Failed Login with empty email & password",
              "timedOut": false,
              "duration": 639,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await domain\n  .post(\"/login\")\n  .send({ email: \"\", password: \"\" })\nexpect(response.body.status).to.equal('FAILED_LOGIN');\nexpect(response.body.message).to.equal('Cek kembali email anda'); cls\nexpect(response.body).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {
                "message": "AssertionError: expected 'Email & Password tidak boleh kosong' to equal 'Cek kembali email anda'",
                "estack": "AssertionError: expected 'Email & Password tidak boleh kosong' to equal 'Cek kembali email anda'\n    at Context.<anonymous> (test-2\\api-test-2\\login.js:19:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Email & Password tidak boleh kosong\n+ Cek kembali email anda\n"
              },
              "uuid": "bf4987ff-d074-4eef-8c6b-222f74a9b8d6",
              "parentUUID": "12b57aa8-84c7-42d4-9c07-6439d8d77dfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "3.Verify Failed Login with email registered & empty password",
              "fullTitle": "Scenario Login Feature 3.Verify Failed Login with email registered & empty password",
              "timedOut": false,
              "duration": 629,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await domain\n  .post(\"/login\")\n  .send({ email: \"admintesting@gmail.com\", password: \"\" })\nexpect(response.body.status).to.equal('FAILED_LOGIN');\nexpect(response.body.message).to.equal('Email atau Password Anda Salah');\nexpect(response.body).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {
                "message": "AssertionError: expected 'Password tidak boleh kosong' to equal 'Email atau Password Anda Salah'",
                "estack": "AssertionError: expected 'Password tidak boleh kosong' to equal 'Email atau Password Anda Salah'\n    at Context.<anonymous> (test-2\\api-test-2\\login.js:27:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Password tidak boleh kosong\n+ Email atau Password Anda Salah\n"
              },
              "uuid": "ddd4a917-a257-4a82-99eb-24e2047d9cfe",
              "parentUUID": "12b57aa8-84c7-42d4-9c07-6439d8d77dfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "4.Verify Failed Login with email & password are not registered or invalid",
              "fullTitle": "Scenario Login Feature 4.Verify Failed Login with email & password are not registered or invalid",
              "timedOut": false,
              "duration": 611,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await domain\n  .post(\"/login\")\n  .send({ email: \"email\", password: \"\" })\nexpect(response.body.status).to.equal('FAILED_LOGIN');\nexpect(response.body.message).to.equal('Email atau Password Anda Salah');\nexpect(response.body).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {
                "message": "AssertionError: expected 'Password tidak boleh kosong' to equal 'Email atau Password Anda Salah'",
                "estack": "AssertionError: expected 'Password tidak boleh kosong' to equal 'Email atau Password Anda Salah'\n    at Context.<anonymous> (test-2\\api-test-2\\login.js:35:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Password tidak boleh kosong\n+ Email atau Password Anda Salah\n"
              },
              "uuid": "0c03cf97-b6c1-4abc-a313-7da215572025",
              "parentUUID": "12b57aa8-84c7-42d4-9c07-6439d8d77dfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "5.Verify Login with valid email & password are not registered or invalid",
              "fullTitle": "Scenario Login Feature 5.Verify Login with valid email & password are not registered or invalid",
              "timedOut": false,
              "duration": 645,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await domain\n  .post(\"/login\")\n  .send({ email: \"admintesting@gmail.com\", password: \"password\" })\nexpect(response.body.status).to.equal('FAILED_LOGIN');\nexpect(response.body.message).to.equal('Email atau Password Anda Salah');\nexpect(response.body).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "7550356b-47a7-4b2a-be07-e1abe5e99812",
              "parentUUID": "12b57aa8-84c7-42d4-9c07-6439d8d77dfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6.Login with invalid email & password valid",
              "fullTitle": "Scenario Login Feature 6.Login with invalid email & password valid",
              "timedOut": false,
              "duration": 627,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await domain\n.post(\"/login\")\n.send({ email:\"admintesting12@gmail.com\", password:\"admintesting12@gmail.com\"})\nexpect(response.body.status).to.equal('FAILED_LOGIN');\nexpect(response.body.message).to.equal('Email atau Password Anda Salah');\nexpect(response.body).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {
                "message": "AssertionError: expected 'Email/Password melebihin maksimal kar…' to equal 'Email atau Password Anda Salah'",
                "estack": "AssertionError: expected 'Email/Password melebihin maksimal kar…' to equal 'Email atau Password Anda Salah'\n    at Context.<anonymous> (test-2\\api-test-2\\login.js:51:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Email/Password melebihin maksimal karakter\n+ Email atau Password Anda Salah\n"
              },
              "uuid": "420e811e-0b56-44ee-8471-5cc12ef03e25",
              "parentUUID": "12b57aa8-84c7-42d4-9c07-6439d8d77dfd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf4bf01b-a752-471c-9ff4-a450eaa185e5",
            "7550356b-47a7-4b2a-be07-e1abe5e99812"
          ],
          "failures": [
            "bf4987ff-d074-4eef-8c6b-222f74a9b8d6",
            "ddd4a917-a257-4a82-99eb-24e2047d9cfe",
            "0c03cf97-b6c1-4abc-a313-7da215572025",
            "420e811e-0b56-44ee-8471-5cc12ef03e25"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3872,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}